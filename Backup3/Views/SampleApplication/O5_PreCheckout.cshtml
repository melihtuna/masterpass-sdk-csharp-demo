<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>
	<title>
		MasterPass Connect Pairing Checkout Flow
	</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Site.css")"/>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.5.1.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/common.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/tooltips/commonToolTips.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/tooltips/jquery.qtip-1.0.0-rc3.min.js")"></script>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	<script type="text/javascript" src="https://jquery-xml2json-plugin.googlecode.com/svn/trunk/jquery.xml2json.js"></script> 
	<script type="text/javascript" src="@ViewBag.LightboxUrl"></script> 
 	<script type="text/javascript" src="https://sandbox.masterpass.com/lightbox/Switch/assets/js/MasterPass.omniture.js"></script>
</head>
<body class="pairing">
	<div class="page">
		<div id="header">
			<div id="title">
				<h1>MasterPass Connect Pairing Checkout Flow</h1>
			</div>
			<div id="logindisplay">&nbsp;</div>
			
		</div>
		<div id="main">
			<h1>Retrieved Pre Checkout XML</h1>

            @if (ViewBag.ErrorMessage != null)
            {
		
                <h2>Error</h2>
                <div class="error">
                    <p>
                        The following error occurred while trying to get the Request Token from the MasterCard API.
                    </p>
<pre>
<code>
    @ViewBag.ErrorMessage
</code>
</pre>
                </div>
            } <!-- end if ViewBag.ErrorMessage != null  -->

			<p>Once a Access Token is gained, request the user protected
				resources (shipping and/or billing information)</p>
			<fieldset>
				<legend>Sent</legend>
				<table>
					<tr>
						<th>
							Authorization Header 
						</th>
						<td>
							<code>@ViewBag.AuthHeader/code>
						</td>
					</tr>
					<tr>
						<th>
							Signature Base String 
						</th>
						<td>
							<hr>
							<code>@ViewBag.SignatureBaseString</code>
						</td>
					</tr>
					<tr>
                        <th>
                            PreCheckout XML 
                        </th>
                        <td>
<pre>                        
<code>                        
@ViewBag.PreCheckoutRequest
</code>
</pre>                            
                        </td>
                    </tr>  
           </table>
           </fieldset>
           <fieldset>
            <legend>Sent To:</legend>
           		<table>                     
                    <tr>
                        <th>
                            Pre Checkout URL 
                        </th>
                        <td>
                            @ViewBag.PreCheckoutUrl
                        </td>
                    </tr>
                    
                 </table>  
                 </fieldset>
            <fieldset>
            <legend>Received:</legend>           
                    
           		<table>                     
                    <tr>
                        <th>
                            Pre Checkout Response 
                        </th>
                        <td>
<pre>                        
<code>                        
@ViewBag.PreCheckoutResponse
</code>
</pre>                           
                        </td>
                    </tr>
				</table>
			</fieldset>

			<h1>
				Received Request Token
			</h1>
						
			<p>
                Use the following Request Token to call subsequent MasterPass services.
            </p>
			
			<fieldset>
            <legend>Sent</legend>
          	<table>
          	       <tr>
                        <th>
                            Authorization Header 
                        </th>
                        <td >                      
							<code>@ViewBag.AuthHeader</code>
						
                        </td>
                    </tr> 
	              	<tr>
                        <th>
                            Signature Base String 
                        </th>
                        <td >
                        	<hr>
                        	<code>@ViewBag.SignatureBaseString</code>
                        </td>
                    </tr>  
           </table>
           </fieldset>
           
           <fieldset>
            <legend>Sent to:</legend>          		
           		<table>                     
                    <tr>
                        <th>
                            Request Token URL  
                        </th>
                        <td>
                           <code>@ViewBag.RequestUrl</code>
                        </td>
                    </tr>
                    
                 </table>  
            </fieldset>
            
            <fieldset>
            <legend>Received</legend>  
                   <table>                     
                    <tr>
                        <th>
                            Request Token 
                        </th>
                        <td>
                            @ViewBag.RequestToken
                        </td>
                    </tr>
                     <tr>
                        <th>
                            Authorize URL 
                        </th>
                        <td>
                        	@ViewBag.RequestTokenAuthorizationUrl
                        </td>
                    </tr>
                    <tr>
                        <th>
                           Expires in 
                        </th>
                        <td>
                            @ViewBag.RequestTokenExpiresIn
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Oauth Secret 
                        </th>
                        <td>
                            @ViewBag.RequestTokenSecret
                        </td>
                    </tr>
                 </table>
                 
                 </fieldset>
                 <h1>
                Shopping Cart Data Submitted
            </h1>
						
			<p>
                This step sends the Merchants shopping cart data to MasterCard services for display in the Wallet.
            </p>
            
               <fieldset>
               	<legend>Sent:</legend>
               	<table>
                 <tr>
                        <th>
                            Authorization Header 
                        </th>
                        <td>                      
							<code>@ViewBag.AuthHeader</code>
                        </td>
                    </tr> 
	              	<tr>
                        <th>
                            Signature Base String 
                        </th>
                        <td>
                        	<hr>
                        	<code>@ViewBag.SignatureBaseString</code>
                        </td>
                    </tr>  
                    <tr>
                        <th>
                            Shopping Cart XML 
                        </th>
                        <td>
<pre>                        
<code>          
@ViewBag.ShoppingCartRequest              
</code>
</pre>                            
                        </td>
                    </tr>  
           </table>
               </fieldset>
               <fieldset>
            <legend>Sent To:</legend>
           		<table>                     
                    <tr>
                        <th>
                            Shopping Cart URL 
                        </th>
                        <td>
                            @ViewBag.ShoppingCartUrl
                        </td>
                    </tr>
                    
                 </table>  
                 </fieldset>
            <fieldset>
            <legend>Received:</legend>           
                    
           		<table>                     
                    <tr>
                        <th>
                            Shopping Cart Response 
                        </th>
                        <td>
<pre>                        
<code>                       
@ViewBag.ShoppingCartResponse
</code>
</pre>                           
                        </td>
                    </tr>
                     
                 </table>
                 </fieldset>
                 }
                 
                 
                 
				<fieldset>
					<legend>Paired Data</legend>
					<table id="pairedData"></table>
				</fieldset>
            <div id="checkoutButtonDiv" onClick="handleCheckoutWithMasterpass()">
				<a href="#">
					<img src="https://www.mastercard.com/mc_us/wallet/img/en/US/mcpp_wllt_btn_chk_147x034px.png" alt="Buy with MasterPass">
				</a>
			</div>
			<div style="padding-bottom: 20px">
				<a href="http://www.mastercard.com/mc_us/wallet/learnmore/en" target="_blank">Learn More</a>
            </div>
            <div id="buttonJavaScriptDiv">
            	<fieldset>
            		<legend>Button Javascript</legend>
<pre><code id="sampleCode"></code></pre>
            	</fieldset>
            </div>
			</div>
			
		</div>
			
			<script type="text/javascript" language="Javascript">
				var json = @Html.Raw(ViewBag.PreCheckoutResponseJson);
				var preCheckout = json.PrecheckoutData;
				var supressShipping = @ViewBag.ShippingSuppression;
				var showRewards = @ViewBag.Rewards;
				var addressId = $("#addressSelect option:selected").val();
				var cardId = $("#cardSelect option:selected").val();
				var rewardId = $("#rewardSelect option:selected").val();
				
                console.log(json);
				console.log(preCheckout);
				
				if (preCheckout.Contact != null) $("<tr><th>Profile:  </th></tr>)").append(generateContactSelect(preCheckout.Contact)).appendTo('#pairedData');
				if ((preCheckout.Cards != null) && (preCheckout.Cards != null)) $("<tr><th>Card:  </th></tr>)").append(generateCardSelect(preCheckout.Cards)).appendTo("#pairedData");
				if ((preCheckout.ShippingAddresses != null) && (preCheckout.ShippingAddresses != null)) {
					$("<tr><th>Address:  </th></tr>)").append(generateAddressSelect(preCheckout.ShippingAddresses)).appendTo('#pairedData');
				} else {
					supressShipping = true;
				}
				if (preCheckout.RewardPrograms != null) $("<tr><th>Rewards:  </th></tr>)").append(generateContactSelect(preCheckout.Contact)).appendTo('#pairedData');
				
            	var locationParams = getJsonFromUrl();
            	
            	function getJsonFromUrl() {
	            	  var query = location.search.substr(1);
	            	  var result = {};
	            	  query.split("&").forEach(function(part) {
	            	    var item = part.split("=");
	            	    result[item[0]] = decodeURIComponent(item[1]);
	            	  });
	            	  return result;
          		}
				var precheckoutTransactionId = preCheckout.PrecheckoutTransactionId;
				
				
				function generateCardSelect(cards){
					var cardSelect = $("<select id='cardSelect'/>").change(function(){
						console.log("card changed");
						updateCheckoutButton();
					});
					switch (true){
						case Object.prototype.toString.call(cards) == "[object Array]":
							console.log("cards is array");
							for (var card in cards){
								console.log(cards[card]);
								generateCardOption(cards[card]).appendTo(cardSelect);
							}
							break;
						case Object.prototype.toString.call(cards) == "[object Object]":
							console.log("cards is object");
							generateCardOption(cards).appendTo(cardSelect);
							break;
					}
					return cardSelect;
				}
				
				function generateCardOption(card){
					option =  $('<option/>', {text: card.BrandName+" - "+card.LastFour}).val(card.CardId);
					return option;
				}
				
				function generateAddressSelect(addresses){
					var addressSelect = $("<select id='addressSelect'/>").change(function(){
						console.log("address changed");
						updateCheckoutButton();
					});
					console.log(addresses);
					switch (true){
						case Object.prototype.toString.call(addresses) == "[object Array]":
							console.log("Address is Array");
							for (var address in addresses) {
								generateAddressOption(addresses[address]).appendTo(addressSelect);
							}
							break;
						case Object.prototype.toString.call(addresses) == "[object Object]":
							console.log("Address is Object");
							generateAddressOption(addresses).appendTo(addressSelect);
							break;
					}
					return addressSelect;
				}
				
				function generateAddressOption(address) {
					console.log("Creating option: "+address.Line1);
					option = $('<option/>', {text: address.Country+" : "+address.Line1}).val(address.AddressId);
					return option;
				}
				
				function generateContactSelect(contact){
					return $("<p>"+contact.FirstName+" "+contact.LastName+"</p>");
				}
				
				function generateRewardSelect(rewards){
					var rewardsSelect = $("<select id='rewardsSelect'/>").change(function(){
						console.log("reward changed");
						updateCheckoutButton();
					});
					switch (true){
						case Object.prototype.toString.call(rewards) == "[object Array]":
							for (var reward in rewards){
								generateRewardOption(reward).appendTo(rewardsSelect);
							}
							break;
						case Object.prototype.toString.call(rewards) == "[object Object]":
							generateRewardOption(rewards).appendTo(rewardsSelect);
							break;
					}
					return rewardsSelect;
				}
								
				function generateRewardOption(reward){
					option = $('<option/>', {text: reward.Name}).val(reward.RewardId);
					option.click(updateCheckoutButton);
					return option;
				}
				
				function handleCheckoutWithMasterpass() {
					console.log("handling checkout")
					addressId = $("#addressSelect option:selected").val();
					cardId = $("#cardSelect option:selected").val();
					rewardId = $("#rewardSelect option:selected").val();
					console.log("the selected address id is: "+addressId);
					console.log("the selected card id is: "+cardId);

					if (showRewards) {
						MasterPass.client.checkout({
					 		"requestToken":"@ViewBag.RequestToken",
					 		"callbackUrl":"@ViewBag.CallbackUrl",
					 		"merchantCheckoutId":"@ViewBag.CheckoutIdentifier",
					 		"allowedCardTypes":["@ViewBag.AcceptedCards"],
					 		"cardId":cardId,
					 		"shippingId":addressId,
					 		"precheckoutTransactionId":precheckoutTransactionId,
					 		"suppressShippingAddressEnable": supressShipping,
					 		"requestBasicCheckout" : @ViewBag.AuthLevelBasic,
					 		"walletName" : "@ViewBag.WalletName",
					 		"consumerWalletId" : "@ViewBag.ConsumerWalletId",
					 		"loyaltyEnabled" : @ViewBag.Rewards,
			       			"allowedLoyaltyPrograms":["@ViewBag.AllowedLoyaltyPrograms"],
					 		"version": "v6"
							}
					);
					} else {
						MasterPass.client.checkout({
					 		"requestToken":"@ViewBag.RequestToken",
					 		"callbackUrl":"@ViewBag.CallbackUrl",
					 		"merchantCheckoutId":"@ViewBag.CheckoutIdentifier",
					 		"allowedCardTypes":["@ViewBag.AcceptedCards"],
					 		"cardId":cardId,
					 		"shippingId":addressId,
					 		"precheckoutTransactionId":precheckoutTransactionId,
					 		"suppressShippingAddressEnable": supressShipping,
					 		"requestBasicCheckout" : @ViewBag.AuthLevelBasic,
					 		"walletName" : "@ViewBag.WalletName",
					 		"consumerWalletId" : "@ViewBag.ConsumerWalletId",
					 		"loyaltyEnabled" : @ViewBag.Rewards,
					 		"version": "v6"
							}
						);
					}

				}
				
				function updateCheckoutButton(){
					addressId = $("#addressSelect option:selected").val();
					cardId = $("#cardSelect option:selected").val();
					rewardId = $("#rewardSelect option:selected").val();
					console.log("the selected address id is: "+addressId);

					$("#checkoutButtonDiv").css({display:"block"});

					var sampleButtonString = "";
		            if (showRewards) {
						sampleButtonString = 'MasterPass.client.checkout({\n\t"element":"checkoutButtonDiv",\n\t"requestToken":"@ViewBag.RequestToken",\n\t"callbackUrl":"@ViewBag.CallbackUrl",\n\t"merchantCheckoutId":"@ViewBag.CheckoutIdentifier",\n\t"allowedCardTypes":["@ViewBag.AcceptedCards"],\n\t"cardId":'+cardId+',\n\t"shippingId":'+addressId+',\n\t"precheckoutTransactionId":'+precheckoutTransactionId+',\n\t"suppressShippingAddressEnable": '+supressShipping+',\n\t"requestBasicCheckout" : @ViewBag.AuthLevelBasic,\n\t"walletName" : "@ViewBag.WalletName",\n\t"consumerWalletId" : "@ViewBag.ConsumerWalletId",\n\t"loyaltyEnabled" : @ViewBag.Rewards,\n\t"allowedLoyaltyPrograms" : "@ViewBag.AllowedLoyaltyPrograms",\n\t"version": "v6"\n});'
		            } else {
						sampleButtonString = 'MasterPass.client.checkout({\n\t"element":"checkoutButtonDiv",\n\t"requestToken":"@ViewBag.RequestToken",\n\t"callbackUrl":"@ViewBag.CallbackUrl",\n\t"merchantCheckoutId":"@ViewBag.CheckoutIdentifier",\n\t"allowedCardTypes":["@ViewBag.AcceptedCards"],\n\t"cardId":'+cardId+',\n\t"shippingId":'+addressId+',\n\t"precheckoutTransactionId":'+precheckoutTransactionId+',\n\t"suppressShippingAddressEnable": '+supressShipping+',\n\t"requestBasicCheckout" : @ViewBag.AuthLevelBasic,\n\t"walletName" : "@ViewBag.WalletName",\n\t"consumerWalletId" : "@ViewBag.ConsumerWalletId",\n\t"loyaltyEnabled" : @ViewBag.Rewards,\n\t"version": "v6"\n});'
		            }
					$("#sampleCode").text(sampleButtonString);

				}
				updateCheckoutButton();
				
				
			</script>
</body>
</html>